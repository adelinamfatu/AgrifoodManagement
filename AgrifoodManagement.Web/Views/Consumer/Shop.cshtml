@using AgrifoodManagement.Web.Models.Shop;

@{
    Layout = "~/Views/Shared/_ConsumerNavbarLayout.cshtml";
    ViewData["Title"] = "Bengal Shop - Products";
}

@model ShopViewModel

<div class="container">
    <section class="all-products">
        <div class="section-header">
            <h2 class="section-title">All Products</h2>
        </div>

        <div class="filter-container">
            <div class="filter-section">
                <div class="filter-group">
                    <label for="category-filter">Category:</label>
                    <select id="category-filter" class="filter-select">
                        <option value="all">All Categories</option>
                        <option value="fruits">Fresh Fruits</option>
                        <option value="vegetables">Fresh Vegetables</option>
                        <option value="dairy">Dairy & Eggs</option>
                        <option value="meat">Meat & Seafood</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="price-filter">Price Range:</label>
                    <select id="price-filter" class="filter-select">
                        <option value="all">All Prices</option>
                        <option value="under-100">Under $100</option>
                        <option value="100-200">$100 - $200</option>
                        <option value="200-300">$200 - $300</option>
                        <option value="over-300">Over $300</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="sort-by">Sort By:</label>
                    <select id="sort-by" class="filter-select">
                        <option value="popularity">Popularity</option>
                        <option value="price-low">Price: Low to High</option>
                        <option value="price-high">Price: High to Low</option>
                        <option value="newest">Newest First</option>
                    </select>
                </div>
            </div>
            <button class="filter-button">Apply Filters</button>
        </div>

        <div class="products-grid large-grid">
            @foreach (var product in Model.Products)
            {
                @await Html.PartialAsync("_ProductCard", product)
            }
        </div>

        <div class="pagination">
            <div class="pagination">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    if (i == Model.CurrentPage)
                    {
                        <span class="page-link active">@i</span>
                    }
                    else
                    {
                        <a href="@Url.Action("Shop", new { page = i })" class="page-link">@i</a>
                    }
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <a href="@Url.Action("Shop", new { page = Model.CurrentPage + 1 })" class="page-link next">Next →</a>
                }
        </div>
    </section>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const productCards = document.querySelectorAll('.product-card');
        
        productCards.forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.querySelector('.product-actions').classList.add('show');
            });
            
            card.addEventListener('mouseleave', function() {
                this.querySelector('.product-actions').classList.remove('show');
            });
        });
        
        const filterButton = document.querySelector('.filter-button');
        
        filterButton.addEventListener('click', function() {
            const category = document.getElementById('category-filter').value;
            const priceRange = document.getElementById('price-filter').value;
            const sortBy = document.getElementById('sort-by').value;
            
            console.log('Filtering by:', {category, priceRange, sortBy});
            
            const allProducts = document.querySelectorAll('.all-products .product-card');
            allProducts.forEach(product => {
                product.style.opacity = '0.5';
                
                setTimeout(() => {
                    product.style.opacity = '1';
                }, 500);
            });
        });
    });
</script>