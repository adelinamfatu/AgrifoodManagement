@using AgrifoodManagement.Web.Models.Shop;

@{
    Layout = "~/Views/Shared/_ConsumerNavbarLayout.cshtml";
    ViewData["Title"] = "Checkout";
}

@model CheckoutViewModel

<div class="checkout-container">
    <div class="checkout-content">
        <div class="checkout-header">
            <a href="@Url.Action("Basket", "Consumer")" class="back-link">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M10 12L6 8L10 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                Back to cart
            </a>
            <h1 class="page-title">Checkout</h1>
            <p class="page-description">Complete your purchase of fresh, locally-grown produce directly from farmers in your area</p>
        </div>

        <div class="checkout-form">
            <div class="checkout-section">
                <h2 class="section-title">1. Contact information</h2>

                <div class="form-row">
                    <div class="form-group">
                        <ejs-textbox id="firstName" name="FirstName" placeholder="First name" cssClass="e-outline" floatLabelType="Auto" value="@Model.FirstName"></ejs-textbox>
                    </div>

                    <div class="form-group">
                        <ejs-textbox id="lastName" name="LastName" placeholder="Last name" cssClass="e-outline" floatLabelType="Auto" value="@Model.LastName"></ejs-textbox>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group phone-group">
                        <ejs-dropdownlist id="countryCode"
                                          cssClass="e-outline"
                                          name="CountryCode"
                                          placeholder="Country Code"
                                          floatLabelType="Auto"
                                          dataSource="@(ViewBag.CountryCodes)"
                                          popupHeight="300px"
                                          popupWidth="240px">
                            <e-dropdownlist-fields text="Text" value="Value"></e-dropdownlist-fields>
                        </ejs-dropdownlist>

                        <ejs-maskedtextbox id="phoneNumber" name="PhoneNumber"
                                           mask="000 000 000"
                                           placeholder="Phone number"
                                           floatLabelType="Auto"
                                           cssClass="e-outline"
                                           value="@Model.PhoneNumber"></ejs-maskedtextbox>
                    </div>

                    <div class="form-group">
                        <ejs-textbox id="email" name="Email" type="Email" placeholder="Email address" cssClass="e-outline" floatLabelType="Auto" value="@Model.Email"></ejs-textbox>
                    </div>
                </div>
            </div>

            <div class="checkout-section">
                <h2 class="section-title">2. Delivery method</h2>

                <div class="delivery-options">
                    <label class="delivery-option">
                        <input type="radio" name="DeliveryMethod" value="SameDay" checked />
                        <div class="delivery-option-content selected">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M22 12h-4l-3 9L9 3l-3 9H2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                            <span>Same-day</span>
                        </div>
                    </label>

                    <label class="delivery-option">
                        <input type="radio" name="DeliveryMethod" value="Express" />
                        <div class="delivery-option-content">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <rect x="1" y="3" width="15" height="13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <polygon points="16 8 20 8 23 11 23 16 20 16 20 13 16 13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <circle cx="5.5" cy="18.5" r="2.5" stroke="currentColor" stroke-width="2" />
                                <circle cx="18.5" cy="18.5" r="2.5" stroke="currentColor" stroke-width="2" />
                            </svg>
                            <span>Express</span>
                        </div>
                    </label>

                    <label class="delivery-option">
                        <input type="radio" name="DeliveryMethod" value="Normal" />
                        <div class="delivery-option-content">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <polyline points="12 6 12 12 16 14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                            <span>Normal</span>
                        </div>
                    </label>
                </div>

                <div class="postal-code-container">
                    <div class="postal-code-wrapper">
                        <svg class="location-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            <circle cx="12" cy="10" r="3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <input asp-for="PostalCode" class="postal-code-input" placeholder="Postal code" value="05488" />
                    </div>
                </div>
            </div>

            <div class="checkout-section">
                <h2 class="section-title">3. Payment method</h2>

                <div class="payment-options">
                    <label class="payment-option">
                        <input type="radio" name="PaymentMethod" value="DPay" />
                        <div class="payment-option-content">
                            <span class="payment-logo">DPay</span>
                        </div>
                    </label>

                    <label class="payment-option">
                        <input type="radio" name="PaymentMethod" value="IPay" checked />
                        <div class="payment-option-content selected">
                            <span class="payment-logo">iPay</span>
                        </div>
                    </label>

                    <label class="payment-option">
                        <input type="radio" name="PaymentMethod" value="GPay" />
                        <div class="payment-option-content">
                            <span class="payment-logo">GPay</span>
                        </div>
                    </label>
                </div>
            </div>

            <div class="checkout-section">
                <h2 class="section-title">4. Discount code</h2>
                <div class="form-row">
                    <div class="form-group">
                        <ejs-textbox id="discountCode" name="DiscountCode" placeholder="Enter discount code" cssClass="e-outline" floatLabelType="Auto"></ejs-textbox>
                    </div>
                    <div class="form-group" style="max-width: 150px;">
                        <ejs-button id="applyDiscountBtn" cssClass="e-outline" content="Apply" button-type="Button"></ejs-button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="order-summary">
        <div class="card-preview">
            <div class="card-design">
                <div class="card-chip"></div>
                <div class="card-contactless"></div>
                <div class="card-details">
                    <div class="card-exp">Exp: 12 / 99</div>
                    <div class="card-number">•••• 1234</div>
                    <div class="card-name">Mr. ABC</div>
                </div>
            </div>
        </div>

        <div class="order-details">
            <h2 class="order-title">@Model.ItemCount items</h2>

            <div class="order-costs">
                <div class="cost-row">
                    <span class="cost-label">Subtotal</span>
                    <span class="cost-value">@Model.Subtotal.ToString("F2") lei</span>
                </div>

                <div id="discount-row"></div>

                <div class="cost-row">
                    <span class="cost-label">Delivery Service</span>
                    <span class="cost-value">+@Model.DeliveryFee.ToString("F2") lei</span>
                </div>

                <div class="cost-row total">
                    <span class="cost-label">Total</span>
                    <span class="cost-value total-value">@Model.TotalAmount.ToString("F2") lei</span>
                </div>
            </div>

            <button id="payBtn" class="pay-button">
                Pay →
            </button>
        </div>
    </div>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('applyDiscountBtn').addEventListener('click', async (e) => {
            e.preventDefault();

            const code = document.getElementById('discountCode').value.trim();
            if (!code) { return alert('Please enter a discount code.'); }

            const getCost = label => {
                const row = [...document.querySelectorAll('.cost-row')]
                    .find(r => r.querySelector('.cost-label').textContent.trim() === label);
                return parseFloat(row.querySelector('.cost-value').textContent);
            };
            const subtotal = getCost('Subtotal');
            const deliveryFee = getCost('Delivery Service');

            const resp = await fetch('@Url.Action("ApplyDiscount", "Cart")', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ code, subtotal, deliveryFee })
            });
            if (!resp.ok) {
                return alert('Failed to apply discount.');
            }
            const data = await resp.json();

            const costsContainer = document.querySelector('.order-costs');
            let discountRow = costsContainer.querySelector('.cost-row.discount');

            if (data.discount > 0) {
                document.getElementById('discount-row').innerHTML = `
                    <div class="cost-row discount">
                      <span class="cost-label">Discount</span>
                      <span class="cost-value discount">
                        -${data.discount.toFixed(2)} lei (${data.discountPercentage}%)
                      </span>
                    </div>`;
            } else {
                document.getElementById('discount-row').innerHTML = '';
            }

            const totalRow = [...costsContainer.querySelectorAll('.cost-row')]
                .find(r => r.classList.contains('total'));
            totalRow.querySelector('.cost-value').textContent = `${data.TotalAmount.toFixed(2)} lei`;
        });

        const deliveryOptions = document.querySelectorAll('.delivery-option input[type="radio"]');

        deliveryOptions.forEach(radio => {
            radio.addEventListener('change', function () {
                document.querySelectorAll('.delivery-option-content').forEach(content => {
                    content.classList.remove('selected');
                });

                if (this.checked) {
                    this.parentElement.querySelector('.delivery-option-content').classList.add('selected');
                }
            });
        });

        const paymentOptions = document.querySelectorAll('.payment-option input[type="radio"]');

        paymentOptions.forEach(radio => {
            radio.addEventListener('change', function () {
                document.querySelectorAll('.payment-option-content').forEach(content => {
                    content.classList.remove('selected');
                });

                if (this.checked) {
                    this.parentElement.querySelector('.payment-option-content').classList.add('selected');
                }
            });
        });
    });

    document.getElementById('payBtn').addEventListener('click', async function (e) {
        e.preventDefault();

        const formData = new FormData(document.querySelector('form'));
        const response = await fetch('@Url.Action("CreateCheckoutSession", "Cart")', {
            method: 'POST',
            body: formData
        });
        const { sessionId, publishableKey } = await response.json();

        const stripe = Stripe(publishableKey);

        const { error } = await stripe.redirectToCheckout({ sessionId });
        if (error) {
            console.error(error);
            alert(error.message);
        }
    });
</script>