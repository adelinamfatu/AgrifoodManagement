@using AgrifoodManagement.Web.Models.Shop;
@using AgrifoodManagement.Util.ValueObjects;
@using System.Text.Json;

@{
    Layout = "~/Views/Shared/_ConsumerNavbarLayout.cshtml";
    ViewData["Title"] = "Checkout";
}

@model CheckoutViewModel

<div class="checkout-container">
    <div class="checkout-content">
        <div class="checkout-header">
            <a href="@Url.Action("Basket", "Consumer")" class="back-link">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M10 12L6 8L10 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                Back to cart
            </a>
            <h1 class="page-title">Checkout</h1>
            <p class="page-description">Complete your purchase of fresh, locally-grown produce directly from farmers in your area</p>
        </div>

        <div class="checkout-form">
            <div class="checkout-section">
                <h2 class="section-title">1. Contact information</h2>

                <div class="form-row">
                    <div class="form-group">
                        <ejs-textbox id="firstName" name="FirstName" placeholder="First name" cssClass="e-outline" floatLabelType="Auto" value="@Model.FirstName"></ejs-textbox>
                    </div>

                    <div class="form-group">
                        <ejs-textbox id="lastName" name="LastName" placeholder="Last name" cssClass="e-outline" floatLabelType="Auto" value="@Model.LastName"></ejs-textbox>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group phone-group">
                        <ejs-dropdownlist id="countryCode"
                                          cssClass="e-outline"
                                          name="CountryCode"
                                          placeholder="Country Code"
                                          floatLabelType="Auto"
                                          dataSource="@(ViewBag.CountryCodes)"
                                          popupHeight="300px"
                                          popupWidth="240px">
                            <e-dropdownlist-fields text="Text" value="Value"></e-dropdownlist-fields>
                        </ejs-dropdownlist>

                        <ejs-maskedtextbox id="phoneNumber" name="PhoneNumber"
                                           mask="000 000 000"
                                           placeholder="Phone number"
                                           floatLabelType="Auto"
                                           cssClass="e-outline"
                                           value="@Model.PhoneNumber"></ejs-maskedtextbox>
                    </div>

                    <div class="form-group">
                        <ejs-textbox id="email" name="Email" type="Email" placeholder="Email address" cssClass="e-outline" floatLabelType="Auto" value="@Model.Email"></ejs-textbox>
                    </div>
                </div>
            </div>

            <div class="checkout-section">
                <h2 class="section-title">2. Delivery method</h2>

                <div class="delivery-options">
                    @foreach (var method in DeliveryFeeMap.Options.Keys)
                    {
                        var option = DeliveryFeeMap.Options[method];
                        var isChecked = Model.DeliveryMethod == method ? "checked" : "";
                        <label class="delivery-option">
                            <input type="radio" name="selectedDelivery" value="@method" @isChecked />
                            <div class="delivery-option-content @(isChecked != "" ? "selected" : "")">
                                @Html.Raw(option.SvgIcon)
                                <span>@method</span>
                            </div>
                        </label>
                    }
                </div>

                <div class="postal-code-container">
                    <div class="postal-code-wrapper">
                        <svg class="location-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            <circle cx="12" cy="10" r="3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <input asp-for="PostalCode" class="postal-code-input" placeholder="Postal code" value="05488" />
                    </div>
                </div>
            </div>

            <div class="checkout-section">
                <h2 class="section-title">3. Payment method</h2>

                <div class="payment-options">
                    <label class="payment-option">
                        <input type="radio" name="PaymentMethod" value="DPay" />
                        <div class="payment-option-content">
                            <span class="payment-logo">DPay</span>
                        </div>
                    </label>

                    <label class="payment-option">
                        <input type="radio" name="PaymentMethod" value="IPay" checked />
                        <div class="payment-option-content selected">
                            <span class="payment-logo">iPay</span>
                        </div>
                    </label>

                    <label class="payment-option">
                        <input type="radio" name="PaymentMethod" value="GPay" />
                        <div class="payment-option-content">
                            <span class="payment-logo">GPay</span>
                        </div>
                    </label>
                </div>
            </div>

            <div class="checkout-section">
                <h2 class="section-title">4. Discount code</h2>
                <div class="form-row">
                    <div class="form-group">
                        <ejs-textbox id="discountCode" name="DiscountCode" placeholder="Enter discount code" cssClass="e-outline" floatLabelType="Auto"></ejs-textbox>
                    </div>
                    <div class="form-group" style="max-width: 150px;">
                        <ejs-button id="applyDiscountBtn" cssClass="e-outline" content="Apply" button-type="Button"></ejs-button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="order-summary">
        <div class="card-preview">
            <div class="card-design">
                <div class="card-chip"></div>
                <div class="card-contactless"></div>
                <div class="card-details">
                    <div class="card-exp">Exp: 12 / 99</div>
                    <div class="card-number">•••• 1234</div>
                    <div class="card-name">Mr. ABC</div>
                </div>
            </div>
        </div>

        <div class="order-details">
            <h2 class="order-title">@Model.ItemCount items</h2>

            <div class="order-costs">
                <div class="cost-row">
                    <span class="cost-label">Subtotal</span>
                    <span class="cost-value">@Model.Subtotal.ToString("F2") lei</span>
                </div>

                @if (Model.Discount > 0)
                {
                    <div class="cost-row discount" id="discount-row">
                        <span class="cost-label">Discount</span>
                        <span class="cost-value discount">
                            -@Model.Discount.ToString("F2") lei (@Model.DiscountPercentage%)
                        </span>
                    </div>
                }

                <div class="cost-row">
                    <span class="cost-label">Delivery Service</span>
                    <span class="cost-value">+@Model.DeliveryFee.ToString("F2") lei</span>
                </div>

                <div class="cost-row total">
                    <span class="cost-label">Total</span>
                    <span class="cost-value total-value">@Model.TotalAmount.ToString("F2") lei</span>
                </div>
            </div>

            <button id="payBtn" class="pay-button">
                Pay →
            </button>
        </div>
    </div>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
    const deliveryFees = @Html.Raw(JsonSerializer.Serialize(DeliveryFeeMap.Options.ToDictionary(kvp => kvp.Key, kvp => kvp.Value.Fee)));

    let currentDiscount = 0;

    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('applyDiscountBtn').addEventListener('click', function (e) {
            e.preventDefault();

            const discountCode = document.getElementById('discountCode')?.value?.trim() || "";
            const selectedDelivery = document.querySelector('input[name="selectedDelivery"]:checked')?.value || "Normal";

            const url = `@Url.Action("Checkout", "Cart")?selectedDelivery=${selectedDelivery}&discountCode=${encodeURIComponent(discountCode)}`;
            window.location.href = url;
        });

        const deliveryOptions = document.querySelectorAll('.delivery-option input[type="radio"]');

        function updateDeliveryFee(deliveryMethod) {
            const deliveryFee = deliveryFees[deliveryMethod] || 0;
            const subtotal = parseFloat(document.querySelector('.cost-row .cost-value').textContent);

            // Update delivery fee
            const deliveryRow = [...document.querySelectorAll('.cost-row')]
                .find(r => r.querySelector('.cost-label').textContent.trim() === 'Delivery Service');
            deliveryRow.querySelector('.cost-value').textContent = `+${deliveryFee.toFixed(2)} lei`;

            // Update total
            const discount = currentDiscount || 0;
            const total = subtotal + deliveryFee - discount;

            const totalRow = [...document.querySelectorAll('.cost-row')]
                .find(r => r.classList.contains('total'));
            totalRow.querySelector('.cost-value').textContent = `${total.toFixed(2)} lei`;
        }

        deliveryOptions.forEach(radio => {
            radio.addEventListener('change', function () {
                document.querySelectorAll('.delivery-option-content').forEach(content => {
                    content.classList.remove('selected');
                });

                if (this.checked) {
                    this.parentElement.querySelector('.delivery-option-content').classList.add('selected');
                    updateDeliveryFee(this.value);
                }
            });
        });

        const paymentOptions = document.querySelectorAll('.payment-option input[type="radio"]');

        paymentOptions.forEach(radio => {
            radio.addEventListener('change', function () {
                document.querySelectorAll('.payment-option-content').forEach(content => {
                    content.classList.remove('selected');
                });

                if (this.checked) {
                    this.parentElement.querySelector('.payment-option-content').classList.add('selected');
                }
            });
        });
    });

    document.getElementById('payBtn').addEventListener('click', async function (e) {
        e.preventDefault();

        const firstName = document.getElementById('firstName')?.value?.trim();
        const lastName = document.getElementById('lastName')?.value?.trim();
        const email = document.getElementById('email')?.value?.trim();
        const phoneNumber = document.getElementById('phoneNumber')?.value?.trim();
        const countryCode = document.getElementById('countryCode')?.ej2_instances?.[0]?.value ?? "+46";
        const postalCode = document.querySelector('input[name="PostalCode"]')?.value?.trim();

        const deliveryMethod = document.querySelector('input[name="selectedDelivery"]:checked')?.value || "Normal";
        const paymentMethod = document.querySelector('input[name="PaymentMethod"]:checked')?.value || "IPay";
        const discountCode = document.getElementById('discountCode')?.value?.trim() || "";

        const subtotal = parseFloat(document.querySelector('.cost-row .cost-value').textContent);
        const deliveryFeeText = document.querySelector('.cost-row:nth-child(3) .cost-value').textContent;
        const deliveryFee = parseFloat(deliveryFeeText.replace('+', '').replace(' lei', ''));
        const totalText = document.querySelector('.cost-row.total .cost-value').textContent;
        const totalAmount = parseFloat(totalText.replace(' lei', ''));

        const response = await fetch('@Url.Action("CreateCheckoutSession", "Cart")', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                firstName,
                lastName,
                email,
                phoneNumber,
                countryCode,
                postalCode,
                deliveryMethod,
                paymentMethod,
                discountCode,
                subtotal,
                deliveryFee,
                totalAmount
            })
        });

        if (!response.ok) {
            const errorText = await response.text();
            console.error("Checkout session failed:", errorText);
            alert("Something went wrong: " + errorText);
            return;
        }

        const { sessionId, publishableKey } = await response.json();

        const stripe = Stripe(publishableKey);
        const { error } = await stripe.redirectToCheckout({ sessionId });

        if (error) {
            console.error(error);
            alert(error.message);
        }
    });
</script>