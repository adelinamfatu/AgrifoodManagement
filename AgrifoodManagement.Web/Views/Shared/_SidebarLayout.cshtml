@{
    Layout = "_AdminLayout";
    var sidebarItems = ViewBag.SidebarItems as List<SidebarViewModel>;
}

<div class="layout-container">
    <div class="toolbar-container">
        <ejs-toolbar id="toolbar">
            <e-toolbar-items>
                <e-toolbar-item prefixIcon="bi bi-list" cssClass="menu-button" id="menu-toggle"></e-toolbar-item>
                <e-toolbar-item text="Agri-Food Management" cssClass="app-title"></e-toolbar-item>
                <e-toolbar-item template="<div class='toolbar-right-items'>
                    <div class='notification-item'>
                        <div class='notification-badge'></div>
                        <i class='bi bi-bell'></i>
                    </div>
                    <div class='notification-item'>
                        <div class='notification-badge'></div>
                        <i class='bi bi-chat-dots'></i>
                    </div>
                    <div class='avatar-container'>
                        <img src='@ViewBag.AvatarUrl' alt='User Avatar' class='user-avatar' id='userAvatar'>
                        <div class='user-info'>
                            <div class='user-name'>@ViewBag.FullName</div>
                            <div class='user-role'>Admin</div>
                        </div>
                        <input type='file' id='photoInput' accept='image/*' style='display:none;' />
                    </div>
                </div>" cssClass="toolbar-right">
                </e-toolbar-item>
            </e-toolbar-items>
        </ejs-toolbar>
    </div>

    <div class="content-wrapper">
        <div id="sidebar-wrapper">
            <ejs-sidebar id="sidebarObj" Width="260px" Position="Left" target="#contentArea" type="Push">
                <e-content-template>
                    <div id="sidebar-menu">
                        @if (sidebarItems != null)
                        {
                            @foreach (var item in sidebarItems)
                            {
                                <div class="menu-item @(item.Id == ViewBag.ActiveItemId ? "active" : "")" onclick="navigateTo('@item.Url', '@item.Id')">
                                    <div class="menu-item-content">
                                        <i class="menu-item-icon @item.IconCss"></i>
                                        <span class="menu-item-text">@item.Name</span>
                                    </div>
                                    @if (item.IsPro)
                                    {
                                        <span class="pro-badge">Pro</span>
                                    }
                                </div>
                            }
                        }

                        <div class="upgrade-pro-container">
                            <div class="upgrade-pro-logo">
                                <i class="bi bi-gem"></i>
                            </div>
                            <h3>Upgrade to PRO</h3>
                            <p>Improve your development process and start doing more with Agri-Food Management PRO!</p>
                            <button class="upgrade-button" onclick="window.location.href='/Subscription/Upgrade'">
                                Upgrade to PRO
                            </button>
                        </div>
                    </div>
                </e-content-template>
            </ejs-sidebar>
        </div>

        <div id="contentArea">
            @RenderBody()
            @RenderSection("Scripts", required: false)
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var sidebar = document.getElementById('sidebarObj').ej2_instances[0];

        document.getElementById('menu-toggle').addEventListener('click', function () {
            sidebar.toggle();
        });

        // Avatar click to open file input
        document.getElementById('userAvatar').addEventListener('click', function () {
            document.getElementById('photoInput').click();
        });

        // Handle file selection and upload
        document.getElementById('photoInput').addEventListener('change', function () {
            if (this.files && this.files[0]) {
                var formData = new FormData();
                formData.append('photo', this.files[0]);

                const avatarImg = document.getElementById('userAvatar');
                const originalSrc = avatarImg.src;

                fetch('/Account/UploadPhoto', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Server returned ' + response.status);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            // Update avatar image if successful
                            avatarImg.src = data.imageUrl;
                        } else {
                            console.error('Upload failed:', data.message);
                            alert('Upload failed: ' + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred during upload. Please try again later.');
                    });
            }
        });
    });

    function navigateTo(url, id) {
        document.querySelectorAll('.menu-item').forEach(item => {
            item.classList.remove('active');
        });

        document.querySelector(`.menu-item[onclick*='${id}']`).classList.add('active');

        window.location.href = url;
    }
</script>