@model AgrifoodManagement.Web.Models.Shop.ProductViewModel

<div class="product-card">
    @if (!string.IsNullOrEmpty(Model.Badge))
    {
        <div class="product-badge">@Model.Badge</div>
    }

    <div class="product-img" 
        style="background-image:url('@Model.ImageUrls.FirstOrDefault()');">

        <div class="product-actions">
            <a asp-controller="Consumer"
               asp-action="ProductDetail"
               asp-route-id="@Model.Id"
               class="quick-view-btn">
                <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">
                    <path d="M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z"></path>
                    <circle cx="288" cy="256" r="64"></circle>
                </svg>
                Quick View
            </a>

            <button class="add-to-cart-btn" onclick="addToCart('@Model.Id', 1)">
                <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">
                    <path d="M528.12 301.319l47.273-208C578.806 78.301 567.391 64 551.99 64H159.208l-9.166-44.81C147.758 8.021 137.93 0 126.529 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24h69.883l70.248 343.435C147.325 417.1 136 435.222 136 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-15.674-6.447-29.835-16.824-40h209.647C430.447 426.165 424 440.326 424 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-22.172-12.888-41.332-31.579-50.405l5.517-24.276c3.413-15.018-8.002-29.319-23.403-29.319H218.117l-6.545-32h293.145c11.206 0 20.92-7.754 23.403-18.681z"></path>
                </svg>
                Add to Cart
            </button>
        </div>
    </div>
    <div class="product-info">
        <h3 class="product-name">@Model.Name</h3>

        <div class="product-details">
            <div class="product-quantity">
                <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512">
                    <path d="M256 336h-.02c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0C-2.06 328.75.02 320.33.02 336H0c0 44.18 57.31 80 128 80s128-35.82 128-80zM128 176l72 144H56l72-144zm511.98 160c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0-87.12 174.26-85.04 165.84-85.04 181.51H384c0 44.18 57.31 80 128 80s128-35.82 128-80h-.02zM440 320l72-144 72 144H440zm-88-16h-.02c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0C93.95 296.25 96.02 287.83 96.02 304H96c0 44.18 57.31 80 128 80s128-35.82 128-80zM256 176l72 144H184l72-144z"></path>
                </svg>
                <span class="quantity-value">@Model.Quantity @Model.UnitOfMeasurement</span>
            </div>

            <div class="product-price">
                <span class="current-price">@Model.CurrentPrice lei</span>
                @if (Model.OriginalPrice > Model.CurrentPrice)
                {
                    <span class="original-price">@Model.OriginalPrice lei</span>
                    <span class="discount-badge">-@(((Model.OriginalPrice - Model.CurrentPrice) / Model.OriginalPrice * 100).ToString("0"))%</span>
                }
            </div>
        </div>
        <div class="product-meta">
            <div class="price-per-unit">
                <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512">
                    <path d="M608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM48 400v-64c35.35 0 64 28.65 64 64H48zm0-224v-64h64c0 35.35-28.65 64-64 64zm272 176c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96zm272 48h-64c0-35.35 28.65-64 64-64v64zm0-224c-35.35 0-64-28.65-64-64h64v64z" />
                </svg>
                <span class="unit-price-value">@(Model.CurrentPrice) lei/@Model.UnitOfMeasurement</span>
            </div>

            <div class="expiry-date @(Model.IsExpiringSoon ? "expiring-soon" : "")">
                <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                    <path d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"></path>
                </svg>
                <span class="expiry-value">Expires: @Model.ExpiryDate.ToString("MMM dd, yyyy")</span>
            </div>
        </div>
    </div>
</div>

<script>
    function addToCart(productId, quantity) {
        fetch('@Url.Action("AddProduct", "Cart")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({ productId, quantity })
        })
            .then(async res => {
                if (!res.ok) throw await res.text();
                return res.json();
            })
            .then(data => {
                showCartToast({
                    title: 'Added to Cart',
                    content: data.message,
                    type: 'success'
                });
            })
            .catch(err => {
                showCartToast({
                    title: 'Error',
                    content: typeof err === 'string' ? err : 'Could not add to cart.',
                    type: 'danger'
                });
            });
    }
</script>
